(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{184:function(t,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("基于ToolGood.Words类库，配合敏感字的文本文件，写的API接口。")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/luoyunchong/dotnetcore-examples/tree/master/asp.net-core-%E6%95%8F%E6%84%9F%E8%AF%8D%E5%A4%84%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/luoyunchong/dotnetcore-examples/tree/master/asp.net-core-%E6%95%8F%E6%84%9F%E8%AF%8D%E5%A4%84%E7%90%86"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("一共二种方式")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("类库配合敏感库")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/toolgood/ToolGood.Words",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToolGood.Words"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("简单用法")]),t._v(" "),t._m(2),a("p",[t._v("配合敏感库文本文件，写的工具类")]),t._v(" "),a("p",[t._v("二个文件放到wwwroot/_Illegal目录下，通过ReplaceStopWords方法调用即可对")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/toolgood/ToolGood.Words/blob/master/csharp/ToolGood.Words.Test/_Illegal/IllegalKeywords.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/toolgood/ToolGood.Words/blob/master/csharp/ToolGood.Words.Test/_Illegal/IllegalKeywords.txt"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/toolgood/ToolGood.Words/blob/master/csharp/ToolGood.Words.Test/_Illegal/IllegalUrls.txt",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/toolgood/ToolGood.Words/blob/master/csharp/ToolGood.Words.Test/_Illegal/IllegalUrls.txt"),a("OutboundLink")],1)])]),t._v(" "),t._m(3),t._m(4),t._v(" "),a("p",[t._v("方案：通过维护敏感库，循环replace\n大佬分享给我的，稍微改成了从文件中获取敏感字。")]),t._v(" "),t._m(5),t._m(6),t._v(" "),a("p",[t._v("使用FreeSql这个ORM时，全局处理string类型的值，进行敏感词处理。代码在StartUp.cs的构造函数中。")]),t._v(" "),t._m(7),a("RightMenu")],1)},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"全局敏感词处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局敏感词处理","aria-hidden":"true"}},[this._v("#")]),this._v(" 全局敏感词处理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1-toolgood-words"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-toolgood-words","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.ToolGood.Words")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[Fact]\npublic void IssuesTest_17()\n{\n    var illegalWordsSearch = new IllegalWordsSearch();\n    string s = "中国|zg人|abc";\n    illegalWordsSearch.SetKeywords(s.Split(\'|\'));\n    var str = illegalWordsSearch.Replace("我是中美国人厉害中国完美ａｂｃddb好的", \'*\');\n\n    Assert.Equal("我是中美国人厉害**完美***ddb好的", str);\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('public class ToolGoodUtils\n{\n    //敏感库只要这二个文件存在即可\n    //本地敏感库缓存-https://github.com/toolgood/ToolGood.Words/tree/master/csharp/ToolGood.Words.Test/_Illegal\n    //因为需要上传至github并同步gitee,安全起见，所以未上传至git，需要自行下载并复制\n    private const string KeywordsPath = "wwwroot/_Illegal/IllegalKeywords.txt";\n    private const string UrlsPath = "wwwroot/_Illegal/IllegalUrls.txt";\n\n    private const string InfoPath = "wwwroot/_Illegal/IllegalInfo.txt";\n    private const string BitPath = "wwwroot/_Illegal/IllegalBit.iws";\n\n    private static IllegalWordsSearch _search;\n    /// <summary>\n    /// 本地敏感库,文件修改后，重新创建缓存Bit\n    /// </summary>\n    /// <returns></returns>\n    public static IllegalWordsSearch GetIllegalWordsSearch()\n    {\n        if (_search == null)\n        {\n            string ipath = Path.GetFullPath(InfoPath);\n            if (File.Exists(ipath) == false)\n            {\n                _search = CreateIllegalWordsSearch();\n            }\n            else\n            {\n                var texts = File.ReadAllText(ipath).Split(\'|\');\n                if (new FileInfo(Path.GetFullPath(KeywordsPath)).LastWriteTime.ToString("yyyy-MM-dd HH:mm:ss") !=\n                    texts[0] ||\n                    new FileInfo(Path.GetFullPath(UrlsPath)).LastWriteTime.ToString("yyyy-MM-dd HH:mm:ss") !=\n                    texts[1]\n                )\n                {\n                    _search = CreateIllegalWordsSearch();\n                }\n                else\n                {\n                    var s = new IllegalWordsSearch();\n                    s.Load(Path.GetFullPath(BitPath));\n                    _search = s;\n                }\n            }\n        }\n        return _search;\n    }\n\n    private static IllegalWordsSearch CreateIllegalWordsSearch()\n    {\n        string[] words1 = File.ReadAllLines(Path.GetFullPath(KeywordsPath), Encoding.UTF8);\n        string[] words2 = File.ReadAllLines(Path.GetFullPath(UrlsPath), Encoding.UTF8);\n        var words = new List<string>();\n        foreach (var item in words1)\n        {\n            words.Add(item.Trim());\n        }\n        foreach (var item in words2)\n        {\n            words.Add(item.Trim());\n        }\n\n        var search = new IllegalWordsSearch();\n        search.SetKeywords(words);\n\n        search.Save(Path.GetFullPath(BitPath));\n\n        var text = new FileInfo(Path.GetFullPath(KeywordsPath)).LastWriteTime.ToString("yyyy-MM-dd HH:mm:ss") + "|"+ new FileInfo(Path.GetFullPath(UrlsPath)).LastWriteTime.ToString("yyyy-MM-dd HH:mm:ss");\n        File.WriteAllText(Path.GetFullPath(InfoPath), text);\n\n        return search;\n    }\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2-循环使用replace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-循环使用replace","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 循环使用Replace")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('public static class StopWords\n{\n\n    static readonly ConcurrentDictionary<string, bool> FunNlpDataSensitive = new ConcurrentDictionary<string, bool>();\n    static readonly ConcurrentDictionary<int, string> ReplaceNewValue = new ConcurrentDictionary<int, string>();\n\n    private const string KeywordsPath = "wwwroot/_Illegal/IllegalKeywords.txt";\n    private const string UrlsPath = "wwwroot/_Illegal/IllegalUrls.txt";\n\n\n    static StopWords()\n    {\n        LoadDataFromFile();\n    }\n\n    public static void LoadDataFromFile()\n    {\n        string words1 = File.ReadAllText(Path.GetFullPath(KeywordsPath), Encoding.UTF8);\n        string words2 = File.ReadAllText(Path.GetFullPath(UrlsPath), Encoding.UTF8);\n        LoadDataFromText(words1);\n        LoadDataFromText(words2);\n    }\n\n\n    public static void LoadDataFromText(string text)\n    {\n        int oldcount = FunNlpDataSensitive.Count;\n        foreach (string wd in text.Split(\'\\n\'))\n        {\n            string keykey = wd.Trim().Trim(\'\\r\', \'\\n\').Trim();\n            if (string.IsNullOrEmpty(keykey)) continue;\n            FunNlpDataSensitive.TryAdd(keykey, true);\n            if (ReplaceNewValue.ContainsKey(keykey.Length) == false)\n                ReplaceNewValue.TryAdd(keykey.Length, "".PadRight(keykey.Length, \'*\'));\n        }\n        Console.WriteLine($"敏感词加载完毕，增加数量：{FunNlpDataSensitive.Count - oldcount}");\n    }\n\n\n    /// <summary>\n    /// 替换所有敏感词为 *\n    /// </summary>\n    /// <param name="that"></param>\n    /// <returns></returns>\n    public static string ReplaceStopWords(this string that)\n    {\n        foreach (var wd in FunNlpDataSensitive.Keys)\n            that = that.Replace(wd, ReplaceNewValue.TryGetValue(wd.Length, out var tryval) ? tryval : "".PadRight(wd.Length, \'*\'));\n        return that;\n    }\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"freesql全局处理敏感词"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#freesql全局处理敏感词","aria-hidden":"true"}},[this._v("#")]),this._v(" FreeSql全局处理敏感词")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("//敏感词处理\nIllegalWordsSearch illegalWords = ToolGoodUtils.GetIllegalWordsSearch();\n\nFsql.Aop.AuditValue += (s, e) =>\n{\n    if (e.Column.CsType == typeof(string) && e.Value != null)\n    {\n        string oldVal = (string)e.Value;\n        string newVal = illegalWords.Replace(oldVal);\n        //第二种处理敏感词的方式\n        //string newVal = oldVal.ReplaceStopWords();\n        if (newVal != oldVal)\n        {\n            e.Value = newVal;\n        }\n    }\n};\n")])])])}],!1,null,null,null);e.default=r.exports}}]);